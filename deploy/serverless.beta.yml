service: paper-trail-service

provider:
  name: aws
  runtime: nodejs12.x
  stage: beta
  region: us-east-1
  role: arn:aws:iam::654918520080:role/APIG-LAMBDA-DDB
  usagePlan:
    quota:
      limit: 500
      offset: 0
      period: MONTH
    throttle:
      burstLimit: 20
      rateLimit: 10
  environment:
    NODE_ENV: BETA

functions:
  authorizer:
    handler: dist/handlers/authorizer-handler/index.handler
    description: Lambda that checks token passed in Authorization header
  health:
    handler: dist/handlers/health-handler/index.handler
    description: Gateway health check. Responds with current time and a short message.
    events:
      - http:
          path: /health
          method: get
  user-get:
    handler: dist/handlers/user-get-handler/index.handler
    description: Retrieve user with OAuth token. Responds with user information.
    events:
      - http:
          path: /user
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  user-post:
    handler: dist/handlers/user-post-handler/index.handler
    description: Retrieve user with OAuth token. Create user with given user information.
    events:
      - http:
          path: /user
          method: post
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  user-put:
    handler: dist/handlers/user-put-handler/index.handler
    description: Retrieve user with OAuth token. Update user with given user information.
    events:
      - http:
          path: /user
          method: put
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  transactions-get:
    handler: dist/handlers/transactions-get-handler/index.handler
    description: Retrieve user with OAuth token. Responds with user's transactions.
    events:
      - http:
          path: /transactions
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  transactions-post:
    handler: dist/handlers/transactions-post-handler/index.handler
    description: Retrieve user with OAuth token. Create transaction for given user.
    events:
      - http:
          path: /transactions
          method: post
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  transactions-put:
    handler: dist/handlers/transactions-put-handler/index.handler
    description: Retrieve user with OAuth token. Update transaction for given user.
    events:
      - http:
          path: /transactions
          method: put
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: services.otterandcow.com
    basePath: "beta"
    stage: beta
    createRoute53Record: true
